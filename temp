char bestQueue(){
	char lenth=0;
	char hight=0;
	char add=1;
	int idx;

	//creatMap();

	MG_arr[0][0]=0xfe;
	queue[0][0]=START;
	queue[0][1]=0;
	MG_arr[0][0] &= 0x0f;

	while(1){
		char a = add;
		idx = lenth;
		lenth += add;
		hight++;
		add = 0;

		while(idx<lenth){
			uchar txy = queue[idx][0];
			uchar temp =txy;
			uchar flag = 0;

			temp = txy+0x10;
			if(connectable(txy, 1, temp)){
				flag = 1;
				queue[idx+a][0] = temp;
				queue[idx+a][1] = hight;
				MG_arr[temp>>4][temp&0x0f] &= 0x0f;
				if(temp==END){
					idx += a;
					break;
				}
				add++;
				a++;
			}

			temp = txy+0x01;
			if(connectable(txy, 4, temp)){
				flag = 1;
				queue[idx+a][0] = temp;
				queue[idx+a][1] = hight;
				MG_arr[temp>>4][temp&0x0f] &= 0x0f;
				if(temp==END){
					idx += a;
					break;
				}
				add++;
				a++;
			}

			temp = txy-0x01;
			if(connectable(txy, 2, temp)){
				flag = 1;
				queue[idx+a][0] = temp;
				queue[idx+a][1] = hight;
				MG_arr[temp>>4][temp&0x0f] &= 0x0f;
				if(temp==END){
					idx += a;
					break;
				}
				add++;
				a++;
			}

			temp = txy-0x10;
			if(connectable(txy, 3, temp)){
				flag = 1;
				queue[idx+a][0] = temp;
				queue[idx+a][1] = hight;
				MG_arr[temp>>4][temp&0x0f] &= 0x0f;
				if(temp==END){
					idx += a;
					break;
				}
				add++;
				a++;
			}
			idx++;
			a--;
			if(!flag){
				flag = 0;
				idx++;
				a--;
			}
		}
		if(queue[idx][0]==END){
			m_step = lenth;
			queue[m_step][0] = END;
			idx--;
			while(1){
				if(connecthhh(queue[m_step][0], queue[idx][0])){
					if(queue[idx][1]==hight-1){
						queue[--m_step][0] = queue[idx][0];
						hight--;
					}
				}
				idx--;
				if(queue[m_step][0]==0x20){
					queue[--m_step][0]=0x10;
					return 1;
				}
			}
		}
	}
}